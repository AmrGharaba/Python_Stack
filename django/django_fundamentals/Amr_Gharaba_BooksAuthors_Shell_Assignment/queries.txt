


> from books_authors_app.models import *

###########. Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby

> Books.objects.create(title = 'C Sharp')
Books.objects.create(title = 'Java')
Books.objects.create(title = 'PHP')
Books.objects.create(title = 'Python')
Books.objects.create(title = 'Rupy')


##########. Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevsky, William Shakespeare, Lau Tzu

> Authors.objects.create(first_name = 'Jane', last_name = 'Austen')
Authors.objects.create(first_name = 'Emily', last_name = 'Dickinson')
Authors.objects.create(first_name = 'Fyodor', last_name = 'Dostoevsky')
Authors.objects.create(first_name = 'William', last_name = 'Shakespeare')
Authors.objects.create(first_name = 'Lau', last_name = 'Tzu')

##########. Add a new text field in the authors table called 'notes'.

> exit()

#########.Create and run the migration files to update the table in your database.

> python manage.py makemigrations
python manage.py migrate

> python manage.py shell
> from books_authors_app.models import *


########. Query: Change the name of the C Sharp book to C#

> book1 = Books.objects.get(title = 'C Sharp')
book1.title = 'C #'
book1.save()

#########. Query: Change the first name of the 4th author to Bill

> author1 = Authors.objects.get(id = 4)
author1.first_name = 'Bell'
author1.save()

#########. Query: Assign the first author to the first 2 books

> Books.objects.get(id = 1).auther.add(Authors.objects.get(id = 1))
Books.objects.get(id = 2).auther.add(Authors.objects.get(id = 1))

########. Query: Assign the second author to the first 3 books

>Books.objects.get(id = 1).auther.add(Authors.objects.get(id = 2))
Books.objects.get(id = 2).auther.add(Authors.objects.get(id = 2))
Books.objects.get(id = 3).auther.add(Authors.objects.get(id = 2))

#######. Query: Assign the third author to the first 4 books

>Books.objects.get(id = 1).auther.add(Authors.objects.get(id = 3))
Books.objects.get(id = 2).auther.add(Authors.objects.get(id = 3))
Books.objects.get(id = 3).auther.add(Authors.objects.get(id = 3))
Books.objects.get(id = 4).auther.add(Authors.objects.get(id = 3))

#######. Query: Assign the fourth author to the first 5 books (or in other words, all the books)

> Authors.objects.get(id = 4).books.add(*(Books.objects.all())

#######. Query: Retrieve all the authors for the 3rd book

> (Books.objects.get(id = 3)).auther.all()

#######. Query: Remove the first author of the 3rd book

> (Books.objects.get(id = 3)).auther.first().delete()

#######. Query: Add the 5th author as one of the authors of the 2nd book

> Books.objects.get(id = 2).auther.add(Authors.objects.get(id = 5))

#######. Query: Find all the books that the 3rd author is part of

> Authors.objects.get(id = 3).books.all()

#######. Query: Find all the authors that contributed to the 5th book

> Books.objects.get(id = 5).auther.all()